{
  "404": {
    "description": "Запрашиваемая страница не существует. Вы можете вернуться на главную страницу.",
    "title": "Страница не найдена"
  },
  "about": {
    "description": "В то же время я изучаю новые технологии и стараюсь делиться ими с другими.",
    "downloadCv": "скачать резюме",
    "facts": {
      "line0": "Я командный игрок",
      "line1": "Мне нравится решать проблемы",
      "line10": "Разговорчивый",
      "line11": "Мне нравится смотреть сериалы",
      "line12": "Общительный",
      "line13": "Оптимист",
      "line2": "Я умею четко и понятно выражать свои мысли",
      "line3": "Я быстро адаптируюсь к новым технологиям",
      "line4": "Моя креативность помогает мне находить креативные решения.",
      "line5": "Я организованный и хорошо управляю своим временем",
      "line6": "У меня есть опыт руководства",
      "line7": "Я люблю свою семью",
      "line8": "Я люблю путешествовать",
      "line9": "Я весёлый"
    },
    "helloThere": "Всем привет!",
    "text": {
      "line1": "С детства я мечтал стать программистом и создавать что-то увлекательное. После первых попыток в Basic, Pascal и Delphi моя жизнь сначала пошла другим путем. Однако спустя 15 лет я понял, что программирование — моё истинное призвание.",
      "line2": "",
      "line3": "Сегодня я сеньор фронт-энд разработчик, специализирующийся на разработке приложений, создании удобных интерфейсов и поддержке веб-проектов. Мне нравится превращать сложные задачи в простые, элегантные и ориентированные на пользователя решения.",
      "line4": "",
      "line5": "Мой профессиональный опыт включает работу с такими современными технологиями, как Next.js, React, TypeScript, и различными инструментами для повышения эффективности разработки. Я постоянно обучаюсь, следую за новыми трендами и технологиями и охотно делюсь знаниями с командой. В свободное время люблю играть на PlayStation, готовить мясо и проводить время с семьей.",
      "line6": "",
      "line7": "Во всех компаниях, где я работал, мне удалось проявить свои софт-скиллы, находить общие решения с командой и оставаться актуальным.",
      "line8": "У меня есть опыт работы с:"
    },
    "whoIAm": "Кто я:"
  },
  "accessibility": {
    "linkName": "Ссылка на доклад",
    "title": "Разработка доступных интерфейсов️"
  },
  "contacts": {
    "message": "Сообщение",
    "messageSent": "Сообщение отправлено!",
    "name": "Имя",
    "oopsError": "Упс! Произошла ошибка при отправке сообщения. Пожалуйста, попробуйте позже.",
    "sayHi": "Let's work together",
    "sendMessage": "Отправить сообщение"
  },
  "jest": {
    "title": "Тестирование с использованием Jest и Testing Library",
    "usefulLinks": "Полезные ссылки"
  },
  "main": {
    "aboutMe": "Обо мне",
    "contacts": "контакты",
    "hello": "Привет",
    "ivan": "Иван",
    "my": "Меня",
    "myWorks": "Мои работы",
    "names": "зовут",
    "performances": "Доклады",
    "presPForPause": "Нажмите \"P\" для паузы. Нажмите \"Пробел\" для нового эффекта"
  },
  "myWorks": {
    "description": "Так как в компаниях в которых я работал я подписал NDA(договор о неразглашении) мне придётся сюда выложить свои пэт проэкты",
    "myWorks": "Мои работы"
  },
  "performances": {
    "accessibility": "Разработка доступных интерфейсов️",
    "regexp": "Не бойтесь регулярных выражений",
    "testingWithJest": "Тестирование с использованием Jest и Testing Library",
    "title": "Мои доклады"
  },
  "regexp": {
    "crib": "Чит-код по регулярным выражениям",
    "learnJS": "Учебник по регулярным выражениям на learn.javascript.ru",
    "linkName": "Полезные ссылки",
    "title": "Не бойтесь регулярных выражений",
    "wikiLink": "Регулярные выражения на вики"
  },
  "seeTheResultHere": "Смотрите результат здесь",
  "types": {
    "description": "Type vs. Interface - Это тема, которая часто вызывает дискуссии между разработчиками TypeScript. Оба эти механизмы позволяют вам определить структуру данных, но имеют свои особенности и цель...",
    "title": "Type vs. Interface"
  },
  "works": {
    "english": {
      "text": {
        "line0": "English learning — это проект, который начался во время марафона React от Зары Захаровой.",
        "line1": "Во время марафона мы познакомились с React, его жизненным циклом и научились работать с формами и Firebase.",
        "line10": "Слово появляется в базе данных (или в локальном хранилище для неавторизованных пользователей) и отображается под полем ввода.",
        "line11": "При нажатии на слово карточка переворачивается, показывая перевод на обратной стороне.",
        "line12": "Слово можно отметить как запомненное или удалить, убрав его из вашего словаря.",
        "line2": "Я освоил работу с props и states, а также передачу данных между компонентами.",
        "line3": "Сначала мы написали свой собственный Redux, чтобы понять его принципы, а затем интегрировали его.",
        "line4": "Для интерфейса мы использовали иконки и формы из библиотеки AntDesign.",
        "line5": "Мы подключили API словаря и Firebase storage для хранения слов пользователей.",
        "line6": "В новой версии проекта, которую я переписал на Next.js, были добавлены современные технологии и новые функции.",
        "line7": "Теперь для авторизации используется Google, а данные неавторизованных пользователей хранятся локально в localStorage.",
        "line8": "Вместо Firebase storage для хранения слов используется собственная база данных, которая сохраняет карточки всех пользователей.",
        "line9": "Чтобы воспользоваться сайтом, нужно ввести новое английское слово в поле ввода."
      },
      "title": "Изучение английского"
    },
    "ganttChart": {
      "text": "Это результат тестового задания. В нём я использовал технологии которые использывал в прошлом проекте."
    },
    "miner": {
      "text": "Просто сделал игру Сапер.",
      "title": "Сапер"
    },
    "pokedex": {
      "fourText": {
        "line0": "В дальнейшем я полностью переписал проект на базе современного Next.js.",
        "line1": "Я загрузил данные всех покемонов, создал собственную базу данных и отформатировал её в соответствии со своими потребностями, используя Prisma для удобного управления данными."
      },
      "secondText": {
        "line0": "Этот проект полностью написан на хуках, что значительно облегчило переход в новую команду React, где я быстро адаптировался, переводя классовые компоненты на функциональные.",
        "line1": "Я также смог поделиться этими знаниями с командой, что способствовало улучшению наших совместных практик."
      },
      "text": {
        "line0": "Pokédex — это результат моего продвинутого марафона React под руководством За́ра Захарова.",
        "line1": "Во время марафона я получил замечательный опыт работы с новыми технологиями и дизайном, который включал детальный стиль-гид с цветами, градиентами, шрифтами и их размерами.",
        "line2": "",
        "line3": "В первоначальной версии проекта я реализовал следующие технологии:"
      },
      "thirdText": {
        "line0": "К сожалению, API, с которым я работал, использовал протокол HTTP и в настоящее время недоступен.",
        "line1": "Тем не менее, я усовершенствовал проект, добавив фильтры по типам и атаке, а также реализовал модальные окна с помощью \"createPortal\"."
      }
    },
    "portfolio": {
      "text": {
        "line0": "Я считаю, что это важно иметь профессиональный сайт портфолио, который отображает все мои проекты и достижения.",
        "line1": "",
        "line10": "",
        "line11": "Пользователь может перейти на страницу проектов (здесь будут жить все лучшие проекты с описанием используемых технологий и ссылками на Github и живые видеодемонстрации).",
        "line12": "",
        "line13": "Пользователь может перейти на страницу «контакты» и связаться со мной.",
        "line14": "",
        "line15": "Пользователь может перейти на страницу моих докладов и почерпнуть те знания которыми я делюсь с другими.",
        "line16": "",
        "line17": "В начале написания кода я незнал, каким стэком будет обладать мой сайт портфолио. Я очень хотел написать его на React но поймите меня правильно во время написания кода я владел базовыми знаниями React и вполне достаточными знаниями ES6. Я понимал, что мне нужно настраивать и добавлять функции так, что бы это демонстрировало мои навыки в программировании. Поэтому я написал его на нативном JS",
        "line18": "",
        "line19": "Со временем я создал монорепозиторий (turborepo) для портфолио, переписал его на Next.js, используя современные технологии, и перенес почти все свои петпроекты в этот монорепозиторий. Основная цель этого веб-сайта-портфолио - продемонстрировать проекты, которые я создал, и сам сайт также считается проектом!",
        "line2": "Сначала я и не представлял как должен выглядеть сайт партфолио и что в нём должно быть. Я начал гуглить и читать статьи, что должно быть в портфолио.",
        "line3": "",
        "line4": "Я составил план, определился с цветовой схемой, набросал пару идей. И принялся за разработку. Я понимал, что Он должен быть уникальным и креативным. Фух, это было сложно!",
        "line5": "Сначала пользователь попадает на главную страницу. Я подумал - это должно быть что-то креативное и уникальное, в моем случае я использовал эффект fluid. Библиотеки я такой не нашёл, но нашёл места где этот эффект приминялся и по заимствовал его от туда - немного преобразив его по своему. Тут на главной странице, можно взаимодействовать с анимацией, нажатием на SPACE - появятся вспышки флюид-анимаций, нажатием на \"Р\" можно остановить анимацию, как бы нажав на паузу. Ну и естественно нажав и проведя по экрану мышкой или пальцем анимация приводится к действию.",
        "line6": "",
        "line7": "Дальше пользователь может перейти на страницу «Обо мне» - на этой странице моя личная история, стэк технологий которыми я владею, опыт в работе и случайные факты обо мне =)",
        "line8": "",
        "line9": "На этом этапе я подумал, что было бы хорошо добавить кнопку назад. Нашёл интересную канвас анимацию и применил её к кнопке \"Назад\"."
      }
    },
    "rpg": {
      "text": {
        "line0": "Здесь получилось написать онлайн игру в которой могут играть сразу несколько человек.",
        "line1": "Прикольный опыт работы с сокетами и с серверной частью.",
        "line2": "Есть онлайн-чат.",
        "line3": "Стек: HTML / SASS / JS/ Webpack5 / Websocket(socket.io) / EsLint / Prettier",
        "line4": "Что бы проверить работоспособность игры и чата, можно запустить игру на нескольких вкладках.",
        "line5": "К сожалению бекенд сейчас не работает."
      }
    },
    "snake": {
      "description": "Классическая Snake без зависимостей. Для отрисовки поля используется DOM, а requestAnimationFrame применяется как основной геймлуп для стабильных обновлений. Код построен на классах: ключевые сущности (Game, Cell) инкапсулируют свою логику и взаимодействуют через композицию. Обработка ввода с клавиатуры реализована через очередь, чтобы избежать залипаний и некорректных поворотов.",
      "features": "Особенности:",
      "li1": "Вся логика написана на классах.",
      "li2": "Простая и понятная структура кода.",
      "li3": "Без фреймворков и лишних зависимостей.",
      "li4": "Геймлуп через requestAnimationFrame.",
      "title": "Чистый HTML, CSS, JS (без фреймворков)."
    },
    "solitaire": {
      "description": "Все карты — PNG, рендерятся через Canvas.\nАрхитектура построена на классах с подходом “Composition over Inheritance”: карты, колоды и состояния игры инкапсулируют своё поведение и взаимодействуют через композицию, а не жёсткое наследование. Это позволяет гибко добавлять функционал и легко обновлять проект. Вместо тяжёлых цепочек наследования всё разделено на небольшие независимые классы. Основная идея — простота добавления новых фич.",
      "features": "Особенности:",
      "li1": "Вся логика написана на классах.",
      "li2": "Структура, которую легко расширять.",
      "li3": "Чистый, минималистичный код без лишних зависимостей.",
      "li4": "Акцент на приятный UI.",
      "title": "Чистый HTML, CSS, JS (без фреймворков)."
    },
    "thanos": {
      "text": {
        "line0": "Работая в EvoPlay мне поступила задача: воспроизвести эфект Таноса.",
        "line1": "Что нужно сделать?",
        "line2": "Нужно сделать распад картинок, как в фильме Мстители 3: Война бесконечности. Картинки должны распадаться на пепел и разлетаться по ветру.",
        "line3": "Немного полапатив интернет, я обнаружил много примеров данной реализации.",
        "line4": "Все примеры которые я находил, были сделаны с библиотекой html2canvas, меня это немного не устраивало! Т.к. мне нужно разщиплять на атомы только картинки а не любой контент. А для этих целей подойдут и обычные средства canvas.",
        "line5": "Поэтому я сделал этот эффект без применения библиотеки html2canvas."
      }
    }
  }
}
