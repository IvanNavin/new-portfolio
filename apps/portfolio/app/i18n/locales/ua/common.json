{
  "404": {
    "description": "Запитувана сторінка не існує. Ви можете повернутися на головну сторінку.",
    "title": "Сторінка не знайдена"
  },
  "about": {
    "description": "Водночас я вивчаю нові технології і намагаюся ділитися ними з іншими.",
    "downloadCv": "завантажити резюме",
    "facts": {
      "line0": "Я командний гравець",
      "line1": "Мені подобається вирішувати проблеми",
      "line10": "Балакучий",
      "line11": "Мені подобається дивитися серіали",
      "line12": "Комунікабельний",
      "line13": "Оптиміст",
      "line2": "Я вмію чітко і зрозуміло висловлювати свої думки",
      "line3": "Я швидко адаптуюсь до нових технологій",
      "line4": "Моя креативність допомагає мені знаходити креативні рішення",
      "line5": "Я організований і добре управляю своїм часом",
      "line6": "Я маю досвід лідерства",
      "line7": "Я люблю свою сім'ю",
      "line8": "Я люблю подорожувати",
      "line9": "Я веселий"
    },
    "helloThere": "Всім привіт!",
    "text": {
      "line1": "З дитинства я мріяв стати програмістом і створювати щось захопливе. Після перших спроб у Basic, Pascal та Delphi моє життя спочатку пішло іншим шляхом. Пройшло 15 років, перш ніж я зрозумів, що програмування — це моє справжнє покликання.",
      "line2": "",
      "line3": "Сьогодні я сеньйор фронт-енд розробник, який спеціалізується на розробці застосунків, створенні зручних інтерфейсів та підтримці веб-проєктів. Мені подобається перетворювати складні задачі на прості, елегантні рішення, орієнтовані на користувача.",
      "line4": "",
      "line5": "Мій професійний досвід включає роботу з сучасними технологіями, такими як Next.js, React, TypeScript, та іншими інструментами для підвищення ефективності розробки. Я завжди вдосконалюю свої знання, слідкую за новими трендами й технологіями та ділюся досвідом з командою. У вільний час люблю грати на PlayStation, готувати м’ясо та проводити час із родиною.",
      "line6": "",
      "line7": "Маю досвід роботи з:"
    },
    "whoIAm": "Хто я:"
  },
  "accessibility": {
    "linkName": "Посилання на доповідь",
    "title": "Розробка доступних інтерфейсів️"
  },
  "contacts": {
    "message": "Повідомлення",
    "messageSent": "Повідомлення надіслано!",
    "name": "Ім'я",
    "oopsError": "Упс! Сталася помилка під час відправлення повідомлення. Будь ласка, спробуйте пізніше.",
    "sayHi": "Let's work together",
    "sendMessage": "Надіслати повідомлення"
  },
  "jest": {
    "title": "Тестування за допомогою Jest та Testing Library",
    "usefulLinks": "Корисні посилання"
  },
  "main": {
    "aboutMe": "Про мене",
    "contacts": "контакти",
    "hello": "Вітання",
    "ivan": "Іван",
    "my": "Мене",
    "myWorks": "Мої роботи",
    "names": "звати",
    "performances": "Доповіді",
    "presPForPause": "Натисніть \"P\" для паузи. Натисніть \"Пробіл\" для нового ефекту"
  },
  "myWorks": {
    "description": "Так як у компаніях, в яких я працював, я підписав NDA (договір про нерозголошення) мені доведеться сюди викласти свої пет проєкти",
    "myWorks": "Мої роботи"
  },
  "performances": {
    "accessibility": "Розробка доступних інтерфейсів️",
    "regexp": "Не бійтеся регулярних виразів",
    "testingWithJest": "Тестування за допомогою Jest та Testing Library",
    "title": "Мої доповіді"
  },
  "regexp": {
    "crib": "Чит-код по регулярним виразам",
    "learnJS": "Посібник по регулярним виразам на learn.javascript.ru",
    "linkName": "Корисні посилання",
    "title": "Не бійтеся регулярних виразів",
    "wikiLink": "Регулярні вирази на вікі"
  },
  "seeTheResultHere": "Дивіться результат тут",
  "types": {
    "description": "Type vs. Interface - це тема, яка часто викликає дискусії серед розробників TypeScript. Обидва ці механізми дозволяють визначати структуру даних, але мають свої особливості та призначення...",
    "title": "Type vs. Interface"
  },
  "works": {
    "english": {
      "text": {
        "line0": "Вивчення англійської мови — це проєкт, який розпочався під час марафону React від Зара Захарова.",
        "line1": "Під час марафону ми ознайомилися з React, його життєвим циклом, а також навчились працювати з формами та Firebase.",
        "line10": "Слово з’являється в базі даних (або у локальному сховищі для неавторизованих користувачів) і відображається під полем вводу.",
        "line11": "При натисканні на слово картка перевертається, показуючи переклад на звороті.",
        "line12": "Слово можна позначити як запам’ятоване або видалити, прибравши його з бази ваших слів.",
        "line2": "Ми опанували роботу з props та states, а також передачу даних між компонентами.",
        "line3": "На початку ми написали власний redux для розуміння його принципів роботи, а потім підключили його.",
        "line4": "Для інтерфейсу використовували іконки та форми з бібліотеки AntDesign.",
        "line5": "Ми підключили API словника та Firebase storage для зберігання слів користувачів.",
        "line6": "У новій версії проєкту, яку я переписав на Next.js, було додано сучасні технології та нові функції.",
        "line7": "Тепер для авторизації використовується Google, а дані неавторизованих користувачів зберігаються локально в localStorage.",
        "line8": "Замість Firebase storage для зберігання слів використовується власна база даних, що зберігає картки всіх користувачів.",
        "line9": "Для користування сайтом потрібно ввести нове англійське слово у поле вводу."
      },
      "title": "Вивчення англійської мови"
    },
    "ganttChart": {
      "text": "Це тестове завдання. Тут я використовую технології, які використовував у попередньому проекті."
    },
    "miner": {
      "text": "Просто зробив гру Сапер.",
      "title": "Сапер"
    },
    "pokedex": {
      "fourText": {
        "line0": "У подальшому я повністю переписав проект на базі сучасного Next.js.",
        "line1": "Я завантажив дані всіх покемонів, створив власну базу даних і відформатував її відповідно до своїх потреб, використовуючи Prisma для зручності управління даними."
      },
      "secondText": {
        "line0": "Цей проект повністю написаний на хуках, що суттєво спростило перехід на нову команду React, де я швидко адаптувався, переводячи класові компоненти на функціональні.",
        "line1": "Я також зміг поділитися цими знаннями з командою, що сприяло поліпшенню наших спільних практик."
      },
      "text": {
        "line0": "Pokedex — це результат просунутого марафону React, проведеного Заром Захаровим.",
        "line1": "У цьому марафоні мені дуже сподобався дизайн та нові технології.",
        "line2": "",
        "line3": "У дизайні був kit - набір та назви всіх кольорів, градієнтів, шрифти та їх розміри тощо.",
        "line4": "Вході марафону я реалізував у цьому проекті такі технології:"
      },
      "thirdText": {
        "line0": "На жаль, API, з яким я працював, використовував HTTP-протокол і наразі недоступний.",
        "line1": "Проте я вдосконалив проект, додавши фільтри за типами та атакою, а також реалізував модальні вікна за допомогою \"createPortal\"."
      }
    },
    "portfolio": {
      "text": {
        "line0": "Я вважаю, що це важливо мати професійний сайт портфоліо, який відображає всі мої проекти та досягнення.",
        "line1": "",
        "line10": "На цьому етапі я подумав, що добре було б додати кнопку назад. Знайшов цікаву канвас анімацію та застосував її до кнопки \"Назад\"",
        "line11": "",
        "line12": "Користувач може перейти на сторінку проектів (тут житимуть усі найкращі проекти з описом використовуваних технологій та посиланнями на Github та живі відеодемонстрації).",
        "line13": "",
        "line14": "Користувач може перейти на сторінку \"контакти\" та зв'язатися зі мною.",
        "line15": "",
        "line16": "Користувач може перейти на сторінку моїх доповідей і отримати ті знання якими я ділюся з іншими.",
        "line17": "",
        "line18": "На початку написання коду я не знав, яким стеком володітиме мій сайт портфоліо. Я дуже хотів написати його на React але зрозумійте мене правильно під час написання коду, я володів базовими знаннями React і цілком достатніми знаннями ES6. Я розумів, що мені потрібно налаштовувати та додавати функції так, щоб це демонструвало мої навички в програмуванні. Тому я написав його на нативному JS",
        "line19": "",
        "line2": "Спочатку я і не уявляв, як повинен виглядати сайт партфоліо і що в ньому має бути. Я почав гуглити та читати статті, що має бути в портфоліо.",
        "line20": "Згодом я створив монорепозиторій (turborepo) для портфоліо, переписав його на Next.js, використовуючи сучасні технології, та переніс майже всі свої петпроекти в цей монорепозиторій. Основна мета цього веб-сайту-портфоліо - продемонструвати проекти, які я створив, і сам сайт також вважається проектом!",
        "line3": "",
        "line4": "Я склав план, визначився із колірною схемою, накидав пару ідей. І взявся за розробку. Я розумів, що портфоліо має бути унікальним та креативним. Фух, це було складно!",
        "line5": "",
        "line6": "Спершу користувач потрапляє на головну сторінку. Я подумав - це має бути щось креативне та унікальне, у моєму випадку я використав ефект fluid. Бібліотеки я такий не знайшов, але знайшов місця, де цей ефект застосовувався і запозичив його від туди - трохи перетворивши його по своєму. Тут на головній сторінці можна взаємодіяти з анімацією, натисканням на SPACE - з'являться спалахи флюїд-анімацій, натисканням на \"Р\" можна зупинити анімацію, як би натиснувши на паузу. Ну і звичайно натиснувши і провівши по екрану мишкою або пльцем анімація приводиться до дії.",
        "line7": "",
        "line8": "Далі користувач може перейти на сторінку «Про мене» - на цій сторінці моя особиста історія, стек технологій якими я володію, досвід у роботі та випадкові факти про мене =)",
        "line9": ""
      }
    },
    "rpg": {
      "text": {
        "line0": "Тут вдалося написати онлайн гру в якій можуть грати відразу кілька людей.",
        "line1": "Прикольний досвід роботи з сокетами та серверною частиною.",
        "line2": "Є онлайн-чат.",
        "line3": "Стек: HTML / SASS / JS / Webpack5 / Websocket (socket.io) / EsLint / Prettier",
        "line4": "Щоб перевірити працездатність гри та чату, можна запустити гру на декількох вкладках.",
        "line5": "Нажаль зараз бекенд не працює."
      }
    },
    "snake": {
      "title": "Чистий HTML, CSS, JS (без фреймворків).",
      "description": "Класична Snake без залежностей. Використовую DOM для візуалізації поля, а requestAnimationFrame — як основний геймлуп для стабільного оновлення гри. Код організований через класи, основні сутності (Game, Cell) інкапсулюють свою поведінку, взаємодія між ними через композицію. Введення з клавіатури обробляється через чергу, щоб уникати залипань і некоректних поворотів.",
      "features": "Особливості:",
      "li1": "Вся логіка написана на класах.",
      "li2": "Проста, зрозуміла структура коду.",
      "li3": "Без фреймворків і зайвих залежностей.",
      "li4": "Геймлуп через requestAnimationFrame."
    },
    "solitaire": {
      "description": "Всі карти — png, рендер через Canvas. Архітектура: Код організований через класи, для логіки використовую патерн \"Сomposition over inheritance\": окремі сутності (наприклад, карти, колоди, ігрові стани) інкапсулюють свою поведінку, а взаємодія між ними організована через композицію, а не жорстке наслідування. Це дозволяє гнучко розширювати функціонал та легко додавати нові можливості. Замість важкого спадкування все розділено на невеликі, незалежні класи. Основна ідея — простота додавання нових фіч.",
      "features": "Особливості:",
      "li1": "Вся логіка написана на класах.",
      "li2": "Cтруктура, яку легко розширювати.",
      "li3": "Чистий, мінімалістичний код без зайвих залежностей.",
      "li4": "Акцент на приємний UI.",
      "title": "Чистий HTML, CSS, JS (без фреймворків)."
    },
    "thanos": {
      "text": {
        "line0": "Під час роботи в EvoPlay мені поставили задачу відтворити ефект Таноса.",
        "line1": "Що повинно бути зроблено?",
        "line2": "Основна мета полягала в тому, щоб зробити розпад зображень, як у фільмі 'Месники 3'.",
        "line3": "Зображення повинні розпадатися на пил і летіти на вітрі.",
        "line4": "Трохи полапатив інтернет, я виявив багато прикладів даної реалізації.",
        "line5": "Всі приклади, які я знаходив, були зроблені з бібліотекою html2canvas, мене це трохи не влаштовувало! Т.к. мені потрібно розщиплювати на атоми тільки картинки, а не будь-який контент. А для цих цілей підійдуть і звичайні засоби canvas.",
        "line6": "Тому я зробив цей ефект без застосування бібліотеки html2canvas."
      }
    },
    "2048": {
      "title": "Чистий HTML, CSS, JS (без фреймворків).",
      "description": "2048 на класах без залежностей. Поле рендериться через DOM і CSS Grid. За замовчуванням 5×5; розмір і вигляд керуються через cols/rows і CSS-змінні. Хід виконується як пайплайн: ковзання → злиття → спавн; синхронізовано подіями transitionend/animationend. Нові плитки — 2 або 4 (25% для 4). Показується перемога при значенні > 2048 і програш, коли ходів немає.",
      "features": "Особливості:",
      "li1": "Класи Game, Board, Cell, Box, EventListener; композиція замість глибокої спадковості.",
      "li2": "DOM + CSS Grid; конфіг через CSS custom properties.",
      "li3": "Клавіатура і свайпи; очікування завершення анімацій.",
      "li4": "Алгоритм ковзання/злиття з групуванням рядків і стовпців."
    }
  }
}
